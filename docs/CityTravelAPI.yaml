openapi: 3.0.1
info:
  title: City Travel API
  version: "1.0.0"
  description: API diseñada para el control y consulta sobre lineas de transporte
    ferroviariao urbano. Pueden realizarse distintas operaciones sonre las
    lineas, las estaciones, los trenes y los accesos. Para el acceso a
    determinadas acciones, de edición, actualización o borrado, será necesario
    encontrarse logueado como usuario para para poder realizarlas; debido a que
    la API se encuentra securizada por medio de un Json Web Token (JWT).


servers:
  - url: http://localhost:8081
tags:
  - name: User
    description: Operaciones de seguridad. Registro y logeo de usuarios por medio de un token JWT.
  - name: Line
    description: Operaciones para realizar sobre las lineas de transporte
  - name: Train
    description: Operaciones para realizar sobre los trenes. Y sobre aquellos que se encuentran relacionados a una linea
  - name: Station
    description: Operaciones para realizar sobre las estaciones que pertenecen a una o varias lineas de transporte
  - name: Garage
    description: Operaciones para realizar con las cocheras y talleres en las diferentes estaciones que dispongan de ellas.
  - name: Access
    description: Operaciones para realizar con los accesos y servicios que poseé cada estación.
paths:
  /Lines:
    get:
      tags:
        - Line
      summary: Listado de lineas de transporte
      description: Devuelve el listado completo de todas las lineas de transporte. Si se proporcionan los parametros "firstTime" ( hora inicio ) o "lastTime" ( hora final), se buscara en el rango especificado
      operationId: getLines
      parameters:
        - name: fisrtHour
          in: query
          description: Filtro por hora de inicio del servicio
          required: false
          schema:
            type: string
            format: 'time'
            default: '00:00'
        - name: lastHour
          in: query
          description: Filtro por hora del último servicio
          required: false
          schema:
            type: string
            format: 'time'
            default: '00:00'
      responses:
        '200':
          description: Se devuelve el listado completo de las lineas, o en su caso por los parametros de inicio y fin indicados
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/Line'
        '500':
          $ref: '#/components/responses/InternalServerError'

  /line:
    post:
      tags:
        - Line
      summary: Añadir lineas de transporte
      description: Podemos añadir las lineas de transporte.
      operationId: postLine
      security:
        - JWT: [ ]
      requestBody:
        $ref: '#/components/requestBodies/postLine'
      responses:
        '201':
          description: El producto se registra correctamente. Devolviendo los datos de la linea creada
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/LineIn'
        '400':
          $ref: '#/components/responses/BadRequest'
        '401':
          $ref: '#/components/responses/UnauthorizedError'
        '500':
          $ref: '#/components/responses/InternalServerError'
  /line/{id}:
    parameters:
      - $ref: '#/components/parameters/Id'
    get:
      tags:
        - Line
      summary: Datos de una linea localizada por su número de id
      description: Devuelve los datos relativos a la linea seleccionada por su id.
      operationId: getLinesById
      responses:
        '200':
          description: Se devuelve los datos de la linea seleccionada
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/Line'
        '404':
          $ref: '#/components/responses/NotFoundException'
        '500':
          $ref: '#/components/responses/InternalServerError'
    patch:
      tags:
        - Line
      summary: Modificación parcial de una linea. Un campo especifico de la linea seleccionada por el id identificador de esta.
      security:
        - JWT: [ ]
      operationId: patchLineById
      requestBody:
        description: Nombre y valor del campo que se modifica
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/PatchLine'
      responses:
        '202':
          description: Se acepta la modificacion y devuelve el cuerpo con la linea y el detalle de la modificacion del campo codigo
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/Line'
        '401':
          $ref: '#/components/responses/UnauthorizedError'
        '404':
          $ref: '#/components/responses/NotFoundException'
        '500':
          $ref: '#/components/responses/InternalServerError'
    put:
      tags:
        - Line
      summary: Modifica una linea
      security:
        - JWT: [ ]
      description: Modifica atributos de la linea, buscandola por el número Id identificador de esta.
      operationId: putLineById
      requestBody:
        $ref: '#/components/requestBodies/postLine'
      responses:
        '202':
          $ref: '#/components/responses/Accepted'
        '401':
          $ref: '#/components/responses/UnauthorizedError'
        '404':
          $ref: '#/components/responses/NotFoundException'
        '500':
          $ref: '#/components/responses/InternalServerError'
    delete:
      tags:
        - Line
      summary: Eliminar una linea por el número Id identifiación de la misma
      security:
        - JWT: [ ]
      description: Eliminamos una linea por el número Id de esta
      operationId: deleteLineById
      responses:
        '204':
          $ref: '#/components/responses/NoContent'
        '401':
          $ref: '#/components/responses/UnauthorizedError'
        '404':
          $ref: '#/components/responses/NotFoundException'
        '500':
          $ref: '#/components/responses/InternalServerError'
  /line/{lineId}/trains:
    get:
      tags:
        - Line
        - Train
      summary: Listado de trenes que circulan por una linea
      description: Devuelve un listado completo de trenes que circulan por una linea, habiendola identificado por el número Id
                  identificación de esta.
      operationId: getTrainsByLineId
      parameters:
        - name: lineId
          in: path
          description: ID de la Linea
          required: true
          schema:
            type: integer
            format: int64
            example: 4
      responses:
        '200':
          description: Se devuelve el listado de los trenes que corresponden a la linea indicada
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/LineTrain'
        '404':
          $ref: '#/components/responses/NotFoundException'
        '500':
          $ref: '#/components/responses/InternalServerError'
  /line/{lineId}/stations:
     get:
       tags:
         - Line
         - Station
       summary: Listado todas las estaciones que se encuentran en una linea.
       description: Devuelve un listado completo de estaciones por las que circula una linea. Habiendo identificado la linea por el número Id de esta.
       operationId: getStationsByLineId
       parameters:
         - name: lineId
           in: path
           description: ID de la Linea
           required: true
           schema:
             type: integer
             format: int64
             example: 4
         - name: wifi
           in: query
           description: Filtro para buscar estaciones que dispongan de servicio wifi
           required: false
           schema:
             type: boolean
         - name: busStation
           in: query
           description: para buscar estaciones que dispongan de estación de autobuses
           required: false
           schema:
             type: boolean
         - name: taxiStation
           in: query
           description: para buscar estaciones que dispongan de estación de taxis
           required: false
           schema:
             type: boolean
         - name: ptoInfo
           in: query
           description: para buscar estaciones que dispongan de centros de Información
           required: false
           schema:
             type: boolean
       responses:
         '200':
           description: Se devuelve el listado de las estaciones que corresponden a la linea indicada
           content:
             application/json:
               schema:
                 type: array
                 items:
                   $ref: '#/components/schemas/LineStation'
         '404':
           $ref: '#/components/responses/NotFoundException'
         '500':
           $ref: '#/components/responses/InternalServerError'

  /trains:
    get:
      tags:
        - Train
      summary: Recibimos el listado total de trenes
      description: Recibimos el listado total de trenes, pudiendo filtrar por número de vagones, asientos o de pie.
      operationId: getTrains
      parameters:
        - name: numwagons
          in: query
          description: Indicación del numero de vagones por el que se queire filtrar
          required: false
          schema:
            type: number
            format: int32
            default: 0
        - name: numSeats
          in: query
          description: Indicación del numero de asientos por el que se quiere filtrar
          required: false
          schema:
            type: number
            format: int32
            default: 0
        - name: numStandUp
          in: query
          description: Indicación del numero de plazas de pie  por el que se quiere filtrar
          required: false
          schema:
            type: number
            format: int32
            default: 0
      responses:
        '200':
          description: Se devuelve el listado completo de trenes si no se introduce filtros.
            En caso contrario el listado completo dependiendo de los filtros
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/LineTrain'
        '500':
          $ref: '#/components/responses/InternalServerError'
  /train/{id}:
    parameters:
      - $ref: '#/components/parameters/Id'
    get:
      tags:
        - Train
      summary: Atributos correspondientes a un tren por el identificador del mismo
      description: Devuelve los atributos de un tren al buscarlo por medio del Identificador (id) de este
      operationId: getTrainById
      responses:
        '200':
          description: Se devuelvem los campos completos del tren solicitado
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/LineTrain'
        '404':
          $ref: '#/components/responses/NotFoundException'
        '500':
          $ref: '#/components/responses/InternalServerError'
    put:
      tags:
        - Train
      summary: Modificar un tren por su Identificador
      security:
        - JWT: [ ]
      operationId: putTrainById
      requestBody:
        $ref: '#/components/requestBodies/putTrainId'
      responses:
        '202':
          $ref: '#/components/responses/AcceptedTrain'
        '400':
          $ref: '#/components/responses/BadRequest'
        '401':
          $ref: '#/components/responses/UnauthorizedError'
        '404':
          $ref: '#/components/responses/NotFoundException'
        '500':
          $ref: '#/components/responses/InternalServerError'
    patch:
      tags:
        - Train
      summary: Modificación de 3 campos especifico del tren seleccionado por su id
      security:
        - JWT: [ ]
      operationId: patchTrainById
      requestBody:
        description: Se puede modificar asientos, vagones y plazas de pie
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/PatchTrain'
      responses:
        '202':
          description: Se devuelve el tren
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/LineTrain'
        '401':
          $ref: '#/components/responses/UnauthorizedError'
        '404':
          $ref: '#/components/responses/NotFoundException'
        '500':
          $ref: '#/components/responses/InternalServerError'
    delete:
      tags:
        - Train
      summary: Eliminar un tren por el identificador del mismo
      security:
        - JWT: [ ]
      description: Eliminamos una linea por su número de Id
      operationId: deleteTrainById
      responses:
        '204':
          $ref: '#/components/responses/NoContent'
        '401':
          $ref: '#/components/responses/UnauthorizedError'
        '404':
          $ref: '#/components/responses/NotFoundException'
        '500':
          $ref: '#/components/responses/InternalServerError'

  /train/{lineId}/train:
    post:
      tags:
        - Train
      summary: Añadir tren en una linea por el Id de la Linea
      security:
        - JWT: [ ]
      description: Podemos añadir un tren a una linea esecificando el ide de la linea
      operationId: postTrainByIdLine
      parameters:
        - name: lineId
          in: path
          description: ID de la Linea
          required: true
          schema:
            type: integer
            format: int64
      requestBody:
        $ref: '#/components/requestBodies/postTrainByIdLine'
      responses:
        '201':
          description: El producto se registra correctamente
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/LineTrain'
        '401':
          $ref: '#/components/responses/UnauthorizedError'
        '500':
          $ref: '#/components/responses/InternalServerError'
  /stations:
    get:
      tags:
        - Station
      parameters:
        - name: wifi
          in: query
          description: Filtro disponibilidad servicio wifi
          required: false
          schema:
            type: boolean
        - name: busStation
          in: query
          description: Filtro enlace con estacion de autobuses
          required: false
          schema:
            type: boolean
        - name: taxiStation
          in: query
          description: Filtro enlace estacion de taxis
          required: false
          schema:
            type: boolean
        - name: ptoInfo
          in: query
          description: para buscar estaciones que dispongan de puntos de información
          required: false
          schema:
            type: boolean
      summary: Atributos correspondientes a una estacion
      description: Devuelve los atributos de una estacion
      operationId: getStation
      responses:
        '200':
          description: Se devuelve el listado de estaciones
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/LineStation'
        '500':
          $ref: '#/components/responses/InternalServerError'
  /station/{id}:
    parameters:
      - name: id
        in: path
        description: ID de la Linea
        required: true
        schema:
          type: integer
          format: int64
    get:
      tags:
        - Station
      summary: Atributos correspondientes a una estación por su identificador

      description: Devuelve los atributos de una estacón por medio del identificador de este
      operationId: getStationById
      responses:
        '200':
          description: Se devuelve la estacion
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/LineStation'
        '404':
          $ref: '#/components/responses/NotFoundException'
        '500':
          $ref: '#/components/responses/InternalServerError'
  /stations/{id}:
    parameters:
      - name: id
        in: path
        description: ID de la Linea
        required: true
        schema:
          type: integer
          format: int64
    put:
      tags:
        - Station
      summary: Modificar una estación por su Identificador
      security:
        - JWT: [ ]
      operationId: putStationById
      requestBody:
        $ref: '#/components/requestBodies/putStationId'
      responses:
        '202':
          $ref: '#/components/responses/AcceptedStation'
        '401':
          $ref: '#/components/responses/UnauthorizedError'
        '404':
          $ref: '#/components/responses/NotFoundException'
        '500':
          $ref: '#/components/responses/InternalServerError'
    delete:
      tags:
        - Station
      summary: Eliminar una estación por su Identificador
      security:
        - JWT: [ ]
      operationId: deleteStationId
      parameters:
        - name: id
          in: path
          description: ID de la Linea
          required: true
          schema:
            type: integer
            format: int64
      responses:
        '500':
          $ref: '#/components/responses/InternalServerError'
        '204':
          $ref: '#/components/responses/NoContent'
        '401':
          $ref: '#/components/responses/UnauthorizedError'
        '404':
          $ref: '#/components/responses/NotFoundException'
  /station/{StationId}/station:
    parameters:
      - name: StationId
        in: path
        description: ID de la Linea
        required: true
        schema:
          type: integer
          format: int64
    patch:
      tags:
        - Station
      summary: Modificación de los campor de horario de la estacion por el id de esta
      security:
        - JWT: [ ]
      operationId: patchStationId
      requestBody:
        description: Se puede modificar horarios de apertura y cierra
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/PatchStation'
      responses:
        '202':
          description: Se devuelve la estación modificada
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/LineStation'
        '404':
          $ref: '#/components/responses/NotFoundException'
        '401':
          $ref: '#/components/responses/UnauthorizedError'
        '500':
          $ref: '#/components/responses/InternalServerError'

  /station/{LineId}/station:
    parameters:
      - name: LineId
        in: path
        description: ID de la Linea
        required: true
        schema:
          type: integer
          format: int64
    post:
      tags:
        - Station
      summary: Añadir datos parciales de una estación por el Id de una linea
      description: Podemos añadir una eestación a una linea esecificando el ide de la linea
      operationId: postStationByIdLine
      security:
        - JWT: [ ]
      requestBody:
        $ref: '#/components/requestBodies/postStationByIdLine'
      responses:
        '201':
          description: La estación se registra correctamente
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/LineStation'
        '401':
          $ref: '#/components/responses/UnauthorizedError'
        '404':
          $ref: '#/components/responses/NotFoundException'
        '500':
          $ref: '#/components/responses/InternalServerError'
  /garages:
    get:
      tags:
        - Garage
      parameters:
        - name: taller
          in: query
          description: Filtro disponibilidad talleres en el garage
          required: false
          schema:
            type: boolean
        - name: rrhh
          in: query
          description: Filtro disponibilidad de recursos humanos en el garage
          required: false
          schema:
            type: boolean
        - name: paintservice
          in: query
          description: Filtro disponibilidad servicio de pintura en el garage
          required: false
          schema:
            type: boolean
      summary: Atributos correspondientes a un garage o cochera
      description: Devuelve filtrado por los atributos del garage o cochera
      operationId: getGarage
      responses:
        '200':
          description: Se devuelve el listado de Garages
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/GaraageDTO'
        '404':
          $ref: '#/components/responses/NotFoundException'
        '500':
          $ref: '#/components/responses/InternalServerError'

  /garage/{id}:
    parameters:
      - $ref: '#/components/parameters/Id'
    get:
      tags:
        - Garage
      summary: Atributos correspondientes a garage por su identificador
      description: Devuelve los atributos de garade por medio del identificador de este
      operationId: getGarageById
      responses:
        '200':
          description: Se devuelve el garage
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/LineGarage'
        '404':
          $ref: '#/components/responses/NotFoundException'
        '500':
          $ref: '#/components/responses/InternalServerError'
    put:
      tags:
        - Garage
      summary: Modificacion garage por el id de este
      security:
        - JWT: [ ]
      description: Modificacion de un garage especificado por el número de Id
      operationId: putGarageById
      requestBody:
        $ref: '#/components/requestBodies/PutGarageById'
      responses:
        '202':
          description: La solicitud ha sido aceptada
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/LineGarage'
        '401':
          $ref: '#/components/responses/UnauthorizedError'
        '404':
          $ref: '#/components/responses/NotFoundException'
        '500':
          $ref: '#/components/responses/InternalServerError'
    delete:
      tags:
        - Garage
      summary: Eliminar una garage por su Identificador
      security:
        - JWT: [ ]
      operationId: deleteGarageById
      responses:
        '500':
          $ref: '#/components/responses/InternalServerError'
        '204':
          $ref: '#/components/responses/NoContent'
        '401':
          $ref: '#/components/responses/UnauthorizedError'
  /garage/{stationId}/garage:
    parameters:
      - name: stationId
        in: path
        description: ID de la Linea
        required: true
        schema:
          type: integer
          format: int64
    post:
      tags:
        - Garage
      summary: Añade un garage a una estacion por el Id de la estación
      description: Podemos añadir un garage a una estacion por el Id de esta
      operationId: postGarageByStationId
      security:
        - JWT: [ ]
      requestBody:
        $ref: '#/components/requestBodies/postGarageByStationId'
      responses:
        '201':
          description: El producto se registra correctamente
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/LineGarage'
        '400':
          $ref: '#/components/responses/BadRequest'
        '404':
          $ref: '#/components/responses/NotFoundException'
        '401':
          $ref: '#/components/responses/UnauthorizedError'
        '500':
          $ref: '#/components/responses/InternalServerError'
  /garage/{garageId}/garage:
    parameters:
      - name: garageId
        in: path
        description: ID de la Linea
        required: true
        schema:
          type: integer
          format: int64
    patch:
      tags:
        - Garage
      security:
        - JWT: [ ]
      summary: Modificación dparcial de un garage por el Id del garage
      operationId: patchGarageById
      requestBody:
        description: Se puede modificar recursos humanos, servicio de pintura y taller
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/PatchGarage'
      responses:
        '202':
          description: Se devuelve el garage completo
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/LineGarage'
        '400':
          $ref: '#/components/responses/BadRequest'
        '401':
          $ref: '#/components/responses/UnauthorizedError'
        '404':
          $ref: '#/components/responses/NotFoundException'
        '500':
          $ref: '#/components/responses/InternalServerError'
  /accesses:
    get:
      tags:
        - Access
      parameters:
        - name: elevator
          in: query
          description: Filtro disponibilidad de ascensor
          required: false
          schema:
            type: boolean
      summary: Atributos correspondientes a un acceso a una estación
      description: Devuelve filtrado o no por si dispone de ascensor , la id y la dirección del acceso a una estación
      operationId: getAccess
      responses:
        '200':
          description: Se devuelve el listado de Accesos
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/OutAccess'
        '500':
          $ref: '#/components/responses/InternalServerError'
  /access/{id}:
    parameters:
      - $ref: '#/components/parameters/Id'
    get:
      tags:
        - Access
      summary: Atributos correspondientes a un acceso de estación por su Id identificador
      description: Devuelve los atributos de un acceso buscado por su identifcador
      operationId: getAccessById
      responses:
        '200':
          description: Se devuelve el acceso
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/LineAccess'
        '404':
          $ref: '#/components/responses/NotFoundException'
        '500':
          $ref: '#/components/responses/InternalServerError'
    put:
      tags:
        - Access
      summary: Modificacion acceso a estaciónpor el id de este
      security:
        - JWT: [ ]
      description: Modificacion de un acceso a estación por el número de Id
      operationId: putAccessId
      requestBody:
        $ref: '#/components/requestBodies/PutAccessById'
      responses:
        '202':
          description: La solicitud ha sido aceptada para procesamiento, pero la respuesta final no está disponible todavía
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/LineAccess'
        '401':
          $ref: '#/components/responses/UnauthorizedError'
        '404':
          $ref: '#/components/responses/NotFoundException'
        '500':
          $ref: '#/components/responses/InternalServerError'
    delete:
      tags:
        - Access
      summary: Eliminar una acceso a una estación por identificador del acceso
      security:
        - JWT: [ ]
      operationId: deleteAccessById
      responses:
        '401':
          $ref: '#/components/responses/UnauthorizedError'
        '404':
          $ref: '#/components/responses/NotFoundException'
        '500':
          $ref: '#/components/responses/InternalServerError'
        '204':
          $ref: '#/components/responses/NoContent'
  /access/{stationId}/access:
    parameters:
      - name: stationId
        in: path
        description: ID de la Linea
        required: true
        schema:
          type: integer
          format: int64
    post:
      tags:
        - Access
      summary: Añade un acceso a una estacion por el Id de la estación
      description: Podemos añadir un acceso a una estacion por el Id de esta
      operationId: postAccessByStationId
      security:
        - JWT: [ ]
      requestBody:
        $ref: '#/components/requestBodies/PutAccessById'
      responses:
        '201':
          description: El producto se registra correctamente
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/LineAccess'
        '400':
          $ref: '#/components/responses/BadRequest'
        '404':
          $ref: '#/components/responses/BadRequest'
        '401':
          $ref: '#/components/responses/UnauthorizedError'
        '500':
          $ref: '#/components/responses/InternalServerError'
  /access/{accessId}/access:
    parameters:
      - name: accessId
        in: path
        description: ID del acceso
        required: true
        schema:
          type: integer
          format: int64
    patch:
      tags:
        - Access
      security:
        - JWT: [ ]
      summary: Modificación parcial de un acceso por el Id del mismo
      operationId: patchGarageById
      requestBody:
        description: Se puede modificar la disponibilidad de ascensor en un acceso
        required: true
        content:
          application/json:
            schema:
              properties:
                elevator:
                  type: boolean

      responses:
        '202':
          description: Se devuelve los datos completos del acceso
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/LineAccess'
        '400':
          $ref: '#/components/responses/BadRequest'
        '404':
          $ref: '#/components/responses/NotFoundException'
        '500':
          $ref: '#/components/responses/InternalServerError'
  /register:
    post:
      tags:
        - User
      summary: Añade un usuario a la base de datos con una clave asociada
      description: Nos permite añadir un registro de un usuario.
      operationId: registerUser

      requestBody:
        $ref: '#/components/requestBodies/NewUserRegister'
      responses:
        '200':
          description: El usuario se registra correctamente
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/NewUserOut'
        '500':
          $ref: '#/components/responses/InternalServerError'
  /token:
    post:
      tags:
        - User
      summary: Ofrece el token asociado al usuario
      description: Ofrece el token de asociado al usuario para poder autorizarle las peticiones
      operationId: tokenPost
      requestBody:
        $ref: '#/components/requestBodies/tokenRegisterUser'
      responses:
        '200':
          description: El usuario se activa correctamente
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/UserToken'
        '500':
          $ref: '#/components/responses/InternalServerError'


components:

  securitySchemes:
    JWT:
      type: http
      scheme: bearer
      bearerFormat: JWT

  schemas:
    LineIn:
      type: object
      properties:
        codeLine:
          type: string
          format: string
          description: Código de la linea
          example: "L-111"
        color:
          type: string
          format: string
          description: Color de la linea
          example: Red
        firstTime:
          type: string
          format: 'date-time'
          description: Horario de apertura de la linea
          example: "06:45"
        LastTime:
          type: string
          format: 'date-time'
          description: Horario de cierre de la linea
          example: "23:00"
        stopTime:
          type: integer
          format: int32
          description: Tiempo de parada en las estaciones
          example: 5
    Line:
      type: object
      properties:
        id:
          type: number
          format: int32
          description: Código Id de la estación
          example: 12
        codeLine:
          type: string
          format: string
          description: Código de la linea
          example: "L-321"
        color:
          type: string
          format: string
          description: Color de la linea
          example: Red
        firstTime:
          type: string
          format: 'date-time'
          description: Horario de apertura de la linea
          example: "06:45"
        LastTime:
          type: string
          format: 'date-time'
          description: Horario de cierre de la linea
          example: "23:00"
        stopTime:
          type: integer
          format: int32
          description: Tiempo de parada en las estaciones
          example: 5
        Station:
          $ref: '#/components/schemas/LineStation'

    LineAccess:
      type: object
      properties:
        Id:
          type: number
          format: int32
          description: Número identificación del acceso
          example: 23
        street:
          type: string
          format: string
          description: Dirección de la calle donde se situa el acceso a la estación
          example: 'Avda Barcelona'
        num:
          type: number
          format: int32
          description: Número de la calle donde se situa el acceso
          example: 291
        latitude:
          type: number
          format: int32
          description: Punto latitud del acceso
          example: 23.2345
        longitude:
          type: number
          format: int32
          description: Punto longitud del acceso
          example: 12.456
        elevator:
          type: boolean
          format: boolean
          description: Indicación si el acceso dispone de ascensores
    LineGarage:
      type: object
      properties:
        Id:
          type: number
          format: int32
          description: Número identificación del garage
          example: 2
        codeGarage:
          type: string
          format: string
          description: Código de identificación del garage
          example: 'G-234'
        taller:
          type: boolean
          format: boolean
          description: Indicación si el garage dispone de taller de reparaciones
        surface:
          type: number
          format: int32
          description: Indicación si el garage dispone de taller de reparaciones
          example: 234.45
        rrhh:
          type: boolean
          format: boolean
          description: Indicación si el garage dispone de recursos humanos
        paintService:
          type: boolean
          format: boolean
          description: Indicación si el garage dispone de taller de pintura
    LineStation:
      type: object
      properties:
        id:
          type: number
          format: int32
          description: Código Id de la estación
          example: 12
        name:
          type: string
          format: string
          description: nombre de la estacion
          example: "San Clemencio"
        hopen:
          type: string
          format: 'date-time'
          description: Horario de apertura de la estacion
          example: "06:45"
        latitude:
          type: number
          format: float
          description: Coordenadas latitud
          example: -8.2698
        longitude:
          type: number
          format: float
          description: Coordenadas longitud
          example: 122.9332
        hcose:
          type: string
          format: 'date-time'
          description: Horario de cierre de la estacion
          example: "23:00"
        ptoInfo:
          type: boolean
          format: boolean
          description: Indicación se dispone de punto de informacion de la red
        wifi:
          type: boolean
          format: boolean
          description: Indicación si dispone de puntos de acceso wifi
        bus_station:
          type: boolean
          format: boolean
          description: Indicación si dispone de enlace con estación de autobus
        taxi_station:
          type: boolean
          format: boolean
          description: Indicación si dispone de enlace con estación de taxis
        LineAccess:
          $ref: '#/components/schemas/LineAccess'
        LineGarage:
          $ref: '#/components/schemas/LineGarage'
    OutAccess:
      type: object
      properties:
        id:
          type: number
          format: int32
          description: Código Id de la estación
          example: 12
        street:
          type: string
          format: string
          description: Direccion
          example: '54329 Hayes Cliffs'

    OutStation:
      type: object
      properties:
        id:
          type: number
          format: int32
          description: Código Id de la estación
          example: 12
        name:
          type: string
          format: string
          description: nombre de la estacion
          example: "San Clemencio - STATION"
        hopen:
          type: string
          format: 'date-time'
          description: Horario de apertura de la estacion
          example: "06:45"
        hcose:
          type: string
          format: 'date-time'
          description: Horario de cierre de la estacion
          example: "23:00"

    LineTrain:
      type: object
      properties:
        id:
          type: number
          format: int32
          description: Código Id del tren
          example: 4
        codeTrain:
          type: string
          format: string
          description: Código de identificación del tren
          example: 'GHF-234'
        model:
          type: string
          format: string
          description: Módelo de locomotora
          example: 'REFLEX-23V'
        numWagons:
          type: number
          format: int32
          description: Número de vagones del que dispone el tren
          example: 10
        numSeats:
          type: number
          format: int32
          description: Número de asientos totales que dispone el tren
          example: 160
        numStandUp:
          type: number
          format: int32
          description: Número de plazas de pie que dispone el tren
          example: 240
        dateBuy:
          type: string
          format: 'date-time'
          description: Fecha de adquisición del tren
          example: '23-02-1998'

    OutLineDTO:
      type: object
      properties:
        id:
          type: number
          format: int32
          description: Código Id de la linea
          example: 37
        codeLine:
          type: string
          format: string
          description: Código identificativo de la linea
          example: "L-123"
        color:
          type: string
          format: string
          description: Color de la linea
          example: "Red"
        firstTime:
          type: string
          format: 'date-time'
          description: Horario de inicio del servicio
          example: "06:30"
        lastTime:
          type: string
          format: 'date-time'
          description: Horario de último servicio
          example: "23:30"
        stopTime:
          type: integer
          format: int32
          description: Tiempo de parada en estaciones
          example: 10
        trains:
          type: array
          items:
            $ref: '#/components/schemas/LineTrain'
          description: Trenes que circulan por la linea
        stations:
          type: array
          items:
            $ref: '#/components/schemas/LineStation'
          description: Estaciones que se hayan dentro de la linea seleccioanda


    GarageCode:
      type: object
      properties:
        codeGarage:
          type: string
          format: string
          description: Código de la cochera o garage
          example: 'GST-238'
    GaraageDTO:
      type: object
      properties:
        id:
          type: integer
          format: int32
          description: Número identificador
          example: '5'
        codeGarage:
          type: string
          format: string
          description: Código de la cochera o garage
          example: 'GST-238'
    PatchLine:
      type: object
      properties:
        codeLine:
          type: string
          format: string
          description: Valor a modificar en el codigo de la linea
          example: "San Petersburgo"
    PatchStation:
      type: object
      properties:
        hopen:
          type: string
          format: string
          description: Hora de apertura de la estacion
          example: '06:15'
        hclose:
          type: string
          format: string
          description: Hora de cierre de la estacion
          example: '23:15'
    PatchGarage:
      type: object
      properties:
        rrhh:
          type: boolean
          description: Existencia de recursos humanos
        taller:
          type: boolean
          description: Existencia de taller
        paintservice:
          type: boolean
          description: Existencia de servicio de pintura

    PostStationByIdLine:
      type: object
      properties:
        name:
          type: string
          format: string
          description: Nombre de la estación
          example: 'Blockshire-STATION'
        hopen:
          type: string
          format: string
          description: horario de apertura de la estacion
          example: "05:00"
        hclose:
          type: string
          format: string
          description: Horaio de cierre de la estacion
          example: '23:45'
    PutAccessById:
      type: object
      properties:
        street:
          type: string
          format: string
          description: Dirección de la calle donde se situa el acceso a la estación
          example: '56094 Hills Mission'
        num:
          type: number
          format: int32
          description: Número de la calle donde se situa el acceso
          example: 671
        latitude:
          type: number
          format: int32
          description: Punto latitud del acceso
          example: -12.8238
        longitude:
          type: number
          format: int32
          description: Punto longitud del acceso
          example: 8.1505
        elevator:
          type: boolean
          format: boolean
          description: Indicación si el acceso dispone de ascensores
    PutStationIn:
      type: object
      properties:
        id:
          type: number
          format: int32
          description: Código Id de la estación
          example: 12
        name:
          type: string
          format: string
          description: nombre de la estacion
          example: "San Clemencio"
        hopen:
          type: string
          format: 'date-time'
          description: Horario de apertura de la estacion
          example: "06:45"
        hcose:
          type: string
          format: 'date-time'
          description: Horario de cierre de la estacion
          example: "23:00"
        ptoInfo:
          type: boolean
          format: boolean
          description: Indicación se dispone de punto de informacion de la red
        wifi:
          type: boolean
          format: boolean
          description: Indicación si dispone de puntos de acceso wifi
        bus_station:
          type: boolean
          format: boolean
          description: Indicación si dispone de enlace con estación de autobus
        taxi_station:
          type: boolean
          format: boolean
          description: Indicación si dispone de enlace con estación de taxis
        latitude:
          type: number
          format: int32
          description: Punto latitud de la estacion (Orientacion N-S)
          example: -12.8238
        longitude:
          type: number
          format: int32
          description: Punto longitud de la estacion (Orientacion E-O)
          example: 8.1505

    PatchTrain:
      type: object
      properties:
        numWagons:
          type: number
          format: int32
          description: Número de vagones del que dispone el tren
          example: 10
        numSeats:
          type: number
          format: int32
          description: Número de asientos totales que dispone el tren
          example: 234
        numStandUp:
          type: number
          format: int32
          description: Número de plazas de pie disponibles
          example: 133
    NewUser:
      type: object
      properties:
        user:
          type: string
          format: string
          description: Nombre del usuario
          example: 'Admin'
        password:
          type: string
          format: string
          description: Clave del usuario
          example: '1234'
    NewUserOut:
      type: object
      properties:
        id:
          type: integer
          format: int32
          description: Id asociada al nuevo usuario
          example: 18
        user:
          type: string
          format: string
          description: Nombre del usuario
          example: 'Admin'
        password:
          type: string
          format: string
          description: Clave del usuario encriptada
          example: '$2a$10$1VwW6NIbt33FIVQa9.Sfl.muI0hQN2T4WCViXUQxHgchFOosor7ua'
        active:
          type: boolean
          description: Indica si el usuario esta activo
        roles:
          type: string
          format: string
          description: Indica el rol asignado al usuario
          example: 'administrador'
    UserToken:
      type: object
      properties:
        token:
          type: string
          format: string
          description: token asignado al usuario
          example: 'eyJhbGciOiJSUzI1NiJ9.eyJpc3MiOiJzZWxmIiwic3ViIjoianMiLCJleHAiOjE2ODAzODI3MDYsImlhdCI6MTY4MDM3O
                    TEwNiwic2NvcGUiOiIifQ.JKDVUXmq3w4nKdqmwI7a2DjcsJdENhoQs6pQzSCFA7AozkNwNck8Fc_VEQHXAxiZetClxCiU
                    kPhQcszk4XU9J1Qu5iTpr7X72NazgLwCvCPV5Ulvp3b6qjFIm270VfhkAeciJbdTN-1WC3-wNbJUEDvXnw64nRBFCJjWK1
                    WNFa7xV5Vubck17kVWLI9LHEMstE1O30URnsj9gtJa-8esixupo1YBz8h4UNMAlO0e5SGn5vCOUbtrK0VSZkhUzMVtnVuoI
                    Y4nT2M0gB8VDUZxIx4u55CBg0lx0j6aJR4EHGler0QLNoM2m9Aojc0RECxqYD_PG6loPYk9_63WQViLeQ'
        username:
          type: string
          format: string
          description: Nombre del usuario
          example: 'administrador'
    BadRequest:
      properties:
        errorCode:
          type: number
          format: int32
          example: 404
        message:
          type: string
          example: Bad Request
    ErrorResponse:
      properties:
        errorCode:
          type: number
          format: int32
          example: 500
        message:
          type: string
          example: Validation error
    NoFound:
      properties:
        errorCode:
          type: number
          format: int32
          example: 404
        message:
          type: string
          example: Line not found
  parameters:
    Id:
      name: id
      in: path
      description: Número ID identificador
      required: true
      schema:
        type: number
        format: int32
        example: 12

  requestBodies:
    postGarageByStationId:
      description: Datos de un garager nuevo en una estacion especificada por el Id
      required: true
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/GarageCode'
    postLine:
      description: Datos de una linea nueva
      required: true
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/LineIn'
    postTrainByIdLine:
      description: Datos de un nuevo tren
      required: true
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/LineTrain'
    putTrainId:
      description: Datos de un tren
      required: true
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/LineTrain'
    putStationId:
      description: Datos de una estación
      required: true
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/PutStationIn'
    postStationByIdLine:
      description: Datos de la nueva estación en la línea
      required: true
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/PostStationByIdLine'
    PutGarageById:
      description: Datos de el garage
      required: true
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/LineGarage'
    PutAccessById:
      description: Datos del acceso a la estación
      required: true
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/PutAccessById'
    NewUserRegister:
      description: Datos de registro de nuevo usuario
      required: true
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/NewUser'

    tokenRegisterUser:
      description: Registro el usuario
      required: true
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/NewUser'



  responses:
    Accepted:
      description: Modificacion aceptada correctamente
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/OutLineDTO'
    AcceptedStation:
      description: Modificacion aceptada correctamente
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/LineStation'
    AcceptedTrain:
      description: Modificacion aceptada correctamente
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/LineTrain'
    NoContent:
      description: No content
    InternalServerError:
      description: Internal Server Error
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/ErrorResponse'
          example:
            errorCode: 500
            message: "Se ha producido un error en el servidor"
    NotFoundException:
      description: Objeto no encontrado
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/NoFound'
          example:
            errorCode: 404
            message: 'Line not found'
    BadRequest:
      description: Campos no cumplen los requisitos
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/BadRequest'
          example:
            errorCode: 400
            message: 'Bad Request'
    UnauthorizedError:
      description: Access token is missing or invalid